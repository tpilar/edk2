---
Language:        Cpp

BasedOnStyle: LLVM
#BasedOnStyle: Google
#BasedOnStyle: Chromium
#BasedOnStyle: Mozilla
#BasedOnStyle: WebKit

AccessModifierOffset: -2

AlignAfterOpenBracket: AlwaysBreak

AlignConsecutiveAssignments: false

AlignConsecutiveDeclarations: false

AlignEscapedNewlines: Left

# 5.2.2.11 Align a continuation line with the part of the line that it continues.
AlignOperands: true

#  contradicted by example code in 6.5.3.4 and Appendix A
AlignTrailingComments: false

# True because we want to put them on a new line.
# 5.7.1.7 The next lines contain parameters.
AllowAllParametersOfDeclarationOnNextLine: true

# 3.2.2 "Always put close braces ?}? on their own line", etc
AllowShortBlocksOnASingleLine: false

# 5.7.3.7 switch Statements
AllowShortCaseLabelsOnASingleLine: false

AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false

# 5.7.1.3 The next line of the function definition must specify the function?s return type.
AlwaysBreakAfterDefinitionReturnType: All

# 5.7.1.4 The next line contains any optional functional modifiers.
AlwaysBreakAfterReturnType: All

AlwaysBreakBeforeMultilineStrings: false

#AlwaysBreakTemplateDeclarations: false

# Appendix A - Function Calling
BinPackArguments: false

# 5.7.1.7 The next lines contain parameters.
BinPackParameters: false

BraceWrapping:
  AfterClass:             false
  AfterControlStatement:  false
  AfterEnum:              false
  AfterFunction:          true
  AfterNamespace:         false
  AfterObjCDeclaration:   false
  AfterStruct:            false
  AfterUnion:             false
  BeforeCatch:            false
  BeforeElse:             false
  IndentBraces:           false
#  SplitEmptyFunction:     true
#  SplitEmptyRecord:       true
#  SplitEmptyNamespace:    true

#BreakAfterJavaFieldAnnotations: false

BreakBeforeBinaryOperators: None

BreakBeforeBraces: Custom

#BreakBeforeInheritanceComma: false

BreakBeforeTernaryOperators: true

#BreakConstructorInitializersBeforeComma: false

BreakStringLiterals: true

ColumnLimit:     80

#CommentPragmas:  '^ IWYU pragma:'
#ConstructorInitializerAllOnOneLineOrOnePerLine: false
#ConstructorInitializerIndentWidth: 2

# 5.1.2 "All indentation is on two space boundaries."
ContinuationIndentWidth: 2

Cpp11BracedListStyle: true

DerivePointerAlignment: false

DisableFormat:   false

#ExperimentalAutoDetectBinPacking: false
#FixNamespaceComments: true
#ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]
#IncludeCategories:
#  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
#    Priority:        2
#  - Regex:           '^(<|"(gtest|isl|json)/)'
#    Priority:        3
#  - Regex:           '.*'
#    Priority:        1
#IncludeIsMainRegex: '$'

# 5.7.3.7 "The case statements are indented either zero tab stops or one tab stop"
IndentCaseLabels: false

#IndentPPDirectives: None

# 3.2.1 "All indentation (tabs) is two spaces."
# 5.1.2 "All indentation is on two space boundaries."
IndentWidth:     2

# 5.7.1.5 "The next line contains the function name, left justified"
IndentWrappedFunctionNames: false

#JavaScriptQuotes: Leave
#JavaScriptWrapImports: true

KeepEmptyLinesAtTheStartOfBlocks: false

#MacroBlockBegin: ''
#MacroBlockEnd:   ''

MaxEmptyLinesToKeep: 1

#NamespaceIndentation: None
#ObjCBlockIndentWidth: 2
#ObjCSpaceAfterProperty: false
#ObjCSpaceBeforeProtocolList: true

#PenaltyBreakAssignment: 0
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakComment: 100
PenaltyBreakFirstLessLess: 0
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 0

# Most examples
PointerAlignment: Right

ReflowComments:  true

SortIncludes:    false

#SortUsingDeclarations : false

# 5.7.2.3 example
# 5.7.2.4 examples
# BUT Laszlo " I strongly prefer the no-space form -- the cast operator is one
# of the most strongly binding operators in C, and the space, common to edk2,
# has actually caused developers to mis-read code and add bugs --"
SpaceAfterCStyleCast: false

#SpaceAfterTemplateKeyword: true

# 5.2.2.2 Always put space before and after binary operators.
SpaceBeforeAssignmentOperators: true

# 3.3.1 "Always put space before an open parenthesis, except for macro definitions."
SpaceBeforeParens: ControlStatements

SpaceInEmptyParentheses: false

SpacesBeforeTrailingComments: 1

#SpacesInAngles:  false
#SpacesInContainerLiterals: false

# indicated by examples
SpacesInCStyleCastParentheses: false

# indicated by examples
SpacesInParentheses: false

# 5.1.5, 5.2.2.5, 5.7.2.4 example code
SpacesInSquareBrackets: false

# 1.3 "The C dialect we use is ISO/IEC 9899:199409, or C95, with some elements from C99."
Standard:        Auto

# 3.2.1 "All indentation (tabs) is two spaces."
# 5.1.2 "All indentation is on two space boundaries."
TabWidth:        2

# 3.2.1 "Tab characters are not allowed."
# 5.1.2 "Do not use tab characters"
UseTab:          Never
...

